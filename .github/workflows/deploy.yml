name: Deploy to AWS

on:
  push:
    branches:
      - create/dockerfile/for/aws  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Login en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir y subir imagen a Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/create_user_microservice_image:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/create_user_microservice_image:latest

      - name: Conectar a AWS EC2 y desplegar
  uses: appleboy/ssh-action@master
  with:
    host: ${{ secrets.EC2_HOST_M }}
    username: ${{ secrets.EC2_USER_M }}
    key: ${{ secrets.EC2_SSH_KEY_M }}
    script: |
      # Detener y eliminar el contenedor si ya existe
      sudo docker stop create_user_microservice_container || true
      sudo docker rm create_user_microservice_container || true

      # Remover imágenes antiguas (opcional, para evitar acumulación)
      sudo docker image prune -af || true

      # Descargar la última versión de la imagen desde Docker Hub
      sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create_user_microservice_image:latest

      # Ejecutar el nuevo contenedor con las variables de entorno
      sudo docker run -d --name create_user_microservice_container \
        --env DB_USER=${{ secrets.DB_USER_M }} \
        --env DB_PASSWORD=${{ secrets.DB_PASSWORD_M }} \
        --env DB_SERVER=${{ secrets.DB_SERVER_M }} \
        --env DB_NAME=${{ secrets.DB_NAME_M }} \
        -p 5000:5000 \
        ${{ secrets.DOCKER_USERNAME }}/create_user_microservice_image:latest
